<?php

namespace Jackal\Copycat\Tests\Writer;

use Jackal\Copycat\Writer\SQLLoadDataLocalWriter;

class SQLLoadDataLocalWriterTest extends AbstractFileTestCase
{
    public function testWriteFileDefaults()
    {
        $writer = new SQLLoadDataLocalWriter('pluto', $this->tmpFile);
        $writer->prepare();
        $writer->writeItem(['col1' => '1','col2' => '2']);
        $writer->finish();

        $this->assertFileContent("        
LOAD DATA LOCAL INFILE '" . __DIR__ . "/tmp.csv' 
INTO TABLE pluto
CHARACTER SET utf8
FIELDS 
    TERMINATED BY '\\t'
    ENCLOSED BY '\"'
    ESCAPED BY ''
LINES 
    TERMINATED BY '\\n'
IGNORE 1 LINES
(col1, col2)

;");
    }

    public function testWriteFileWithCreateTable()
    {
        $writer = new SQLLoadDataLocalWriter('pluto', $this->tmpFile, [
            'create_table' => true,
        ]);
        $writer->prepare();
        $writer->writeItem(['col1' => '1','col2' => '2']);
        $writer->finish();

        $this->assertFileContent("DROP TABLE IF EXISTS pluto;CREATE TABLE pluto (col1 text, col2 text);        
LOAD DATA LOCAL INFILE '" . __DIR__ . "/tmp.csv' 
INTO TABLE pluto
CHARACTER SET utf8
FIELDS 
    TERMINATED BY '\\t'
    ENCLOSED BY '\"'
    ESCAPED BY ''
LINES 
    TERMINATED BY '\\n'
IGNORE 1 LINES
(col1, col2)

;");
    }

    public function testWriteFileWithAutoincrementField()
    {
        $writer = new SQLLoadDataLocalWriter('pluto', $this->tmpFile, [
            'create_table' => true,
            'autoincrement_field' => 'id',
        ]);
        $writer->prepare();
        $writer->writeItem(['col1' => '1','col2' => '2']);
        $writer->finish();

        $this->assertFileContent("DROP TABLE IF EXISTS pluto;CREATE TABLE pluto (id int auto_increment not null, col1 text, col2 text, primary key (id));        
LOAD DATA LOCAL INFILE '" . __DIR__ . "/tmp.csv' 
INTO TABLE pluto
CHARACTER SET utf8
FIELDS 
    TERMINATED BY '\\t'
    ENCLOSED BY '\"'
    ESCAPED BY ''
LINES 
    TERMINATED BY '\\n'
IGNORE 1 LINES
(col1, col2)
SET id = NULL
;");
    }

    protected function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        if (is_file(__DIR__ . '/tmp.csv')) {
            unlink(__DIR__ . '/tmp.csv');
        }
    }
}
